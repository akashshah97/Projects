                DS_RS	BIT	P2.7	;Data select/register select pin
                RD_WR	BIT	P2.6	;Read/Write select pin
		ENABLE	BIT	P2.5	;EN H-L pin
		BUSY	BIT	P0.7	;Busy flag check pin
				
		LCD_OUT		EQU	P0	;LCD interfaced port

		LCD_LINE	EQU	10H
		LINE_1		EQU	11H
		LINE_2		EQU	12H
		DLY_1		EQU	13H
		DLY_2		EQU	14H	
		DLY_3		EQU	15H
			
		ORG 3000H
		LJMP MAIN

MAIN:		MOV SP,#65H
		CALL LCD_SET	;initiates LCD
		CALL WELCOME	;welcome notes
		JMP K1

LCD_SET:	MOV A,#38H
		LCALL CMNWRT
		MOV A,#0CH
		LCALL CMNWRT
		MOV A,#01H		
		LCALL CMNWRT
		MOV A,#06H
		LCALL CMNWRT
		MOV LINE_1,#80H
		MOV LINE_2,#0C0H
		CLR 00H
		RET

WELCOME:	MOV LCD_LINE,LINE_1
		MOV DPTR,#PRINT1
		ACALL DISPLAY
		ACALL DELAY3
		MOV LCD_LINE,LINE_2
		MOV DPTR,#PRINT2
		ACALL DISPLAY
		ACALL DELAY3
		RET

DISPLAY:	MOV A,LCD_LINE
		ACALL CMNWRT
DISP:		CLR A
		MOVC A,@A+DPTR
		JZ OUT
		ACALL DATAWRT
		ACALL DELAY2
		INC DPTR
		JMP DISP
OUT:		RET
		

CMNWRT:	ACALL READY
		MOV LCD_OUT,A
		CLR DS_RS
		CLR RD_WR
		SETB ENABLE
		CLR ENABLE
		RET

DATAWRT:	ACALL READY
		MOV LCD_OUT,A
		SETB DS_RS
		CLR RD_WR
		SETB ENABLE
		CLR ENABLE
		RET

READY:	SETB BUSY
		CLR DS_RS
		SETB RD_WR
BACK:		CLR ENABLE
		SETB ENABLE
		JB BUSY,BACK
		RET
		
DELAY2:	MOV DLY_1,#09FH
X1:		MOV DLY_2,#0FFH
X2:		DJNZ DLY_2,X2
		DJNZ DLY_1,X1
		RET

DELAY3:	MOV DLY_1,#06H
Y1:		MOV DLY_2,#0FFH
Y2:		MOV DLY_3,#0FFH
Y3:		DJNZ DLY_3,Y3
		DJNZ DLY_2,Y2
		DJNZ DLY_1,Y1
		RET

	;NOW FOR DISPLAY NUMBER

K1:    ANL P1,#0FH      ;make columns as an input pins and rows as output pins
       MOV A,P1         ;read all col. (ensure all keys open)
       ANL A,#0FH   	;masked unused bits
       CJNE A,#0FH,K1   ;check til all keys released
K2:    
;ACALL DELAY            ;call 20 msec delay
       MOV A,P1         ;see if any key is pressed
       ANL A,#0FH       ;mask unused bits
       CJNE A,#0FH,OVER ;key pressed, await closure
       SJMP K2          ;check il key pressed
OVER:  
;ACALL DELAY            ;wait 20 msec debounce time
       MOV A,P1         ;check key closure
       ANL A,#0FH       ;mask unused bits
       CJNE A,#0FH,OVER1;key pressed, find row
       SJMP K2          ;if none, keep polling
OVER1: MOV P1,#07FH     ;ground row 0
       MOV A,P1         ;read all columns
       ANL A,#0FH       ;mask unused bits
       CJNE A,#0FH,ROW_0;key row 0, find the col.
       MOV P1,#0BFH     ;ground row 1
       MOV A,P1         ;read all columns
       ANL A,#0FH       ;mask unused bits 
       CJNE A,#0FH,ROW_1;keyrow 1, find the col.
       MOV P1,#0DFH     ;ground row 2
       MOV A,P1         ;read all columns
       ANL A,#0FH       ;mask unused bits
       CJNE A,#0FH,ROW_2;key row 2, find the col.
       MOV P1,#EFH      ;ground row 3
       MOV A,P1         ;read all columns
       ANL A,#0FH       ;mask unused bits
       CJNE A,#0FH,ROW_3;keyrow 3, find the col.
       LJMP K2          ;if none, false input, repeat
ROW_0: MOV DPTR,#KCODE0 ;set DPTR=start of row 0        
       SJMP FIND        ;find col. key belongs to
ROW_1: MOV DPTR,#KCODE1 ;set DPTR=start of row 1
       SJMP FIND        ;find col. key belongs to
ROW_2: MOV DPTR,#KCODE2 ;set DPTR=start of row 2 
       SJMP FIND        ;find col. key belongs to
ROW_3: MOV DPTR,#KCODE3 ;set DPTR=start of row 3
FIND:  RRC A            ;see if any CY bit low
       JNC MATCH        ;if zero, get the ASCII code       
       INC DPTR         ;point to next col. address
       SJMP FIND        ;keep searching
MATCH: CLR A            ;set A=0 (match is found)
       MOV LCD LINE,LINE1
       ACALL CMNWRT 
       MOVC A,@A+DPTR   ;get ASCII code from table
       ACALL DATAWRT
       LJMP  K1			
	  ;ASCII LOOK-UP TABLE FOR EACH ROW
      ORG     300H
PRINT1:	DB' PRESENTED BY ',0
PRINT2: DB' AKASH SHAH',0
KCODE0: DB     '','1','2','3'          ;ROW 0
KCODE1: DB     '','4','5','6'          ;ROW 1
KCODE2: DB     '','7','8','9'          ;ROW 2
KCODE3: DB     '','','0','#'           ;ROW 3
      END